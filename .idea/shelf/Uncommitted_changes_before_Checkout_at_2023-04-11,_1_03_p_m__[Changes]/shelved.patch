Index: src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.project.javafxcontroller;\n\nimport com.app.project.App;\nimport com.app.project.entity.Property;\nimport com.app.project.repository.PropertiesRepository;\nimport com.app.project.service.PropertyServices;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.stage.Stage;\n\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.ResourceBundle;\n\npublic class RentedUnitsController implements Initializable {\n    private PropertyServices propertyServices = new PropertyServices(PropertiesRepository.getInstance());\n    @FXML\n    private ListView<Property> rentedUnitsListView;\n    private ObservableList<Property> rentedUnitsObservableList;\n    @FXML\n    private Button closebtn;\n\n    public void initialize() {\n        rentedUnitsObservableList = FXCollections.observableArrayList();\n        rentedUnitsListView.setItems(rentedUnitsObservableList);\n        displayAllVacantUnits();\n\n    }\n\n    private void displayAllVacantUnits() {\n        // Retrieve all items from the model and add them to the list\n        ArrayList<Property> vacantUnits = (ArrayList<Property>) (ArrayList<?>) propertyServices.findRented();\n        rentedUnitsObservableList.addAll(vacantUnits);\n        rentedUnitsListView = new ListView<>(rentedUnitsObservableList);\n        rentedUnitsListView.setCellFactory(param -> new ListCell<Property>() {\n            @Override\n            protected void updateItem(Property item, boolean empty) {\n                super.updateItem(item, empty);\n                setText(item.toString());\n            }\n        });\n        App.navigate();\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        rentedUnitsObservableList = FXCollections.observableArrayList();\n        rentedUnitsListView.setItems(rentedUnitsObservableList);\n        displayAllVacantUnits();\n    }\n\n    //    @FXML\n//    private void handleAddNewProperty(ActionEvent ae) throws IOException {\n//        Parent root = FXMLLoader.load(getClass().getResource(\"/AddProperty.fxml\"));\n//        Stage stage = new Stage();\n//        stage.setTitle(\"Add property View\");\n//        stage.setScene(new Scene(root));\n//        stage.show();\n//        App.stage.close();\n//    }\n    @FXML\n    private void back() {\n        Stage stage = (Stage) closebtn.getScene().getWindow();\n        stage.close();\n        App.navigate();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java b/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java
--- a/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java	(date 1681232319433)
@@ -4,6 +4,7 @@
 import com.app.project.entity.Property;
 import com.app.project.repository.PropertiesRepository;
 import com.app.project.service.PropertyServices;
+import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
@@ -36,14 +37,19 @@
         // Retrieve all items from the model and add them to the list
         ArrayList<Property> vacantUnits = (ArrayList<Property>) (ArrayList<?>) propertyServices.findRented();
         rentedUnitsObservableList.addAll(vacantUnits);
-        rentedUnitsListView = new ListView<>(rentedUnitsObservableList);
-        rentedUnitsListView.setCellFactory(param -> new ListCell<Property>() {
-            @Override
-            protected void updateItem(Property item, boolean empty) {
-                super.updateItem(item, empty);
-                setText(item.toString());
-            }
-        });
+        Thread thread = new Thread(() ->{
+            rentedUnitsListView = new ListView<>(rentedUnitsObservableList);
+            Platform.runLater(() ->{
+                rentedUnitsListView.setCellFactory(param -> new ListCell<Property>() {
+                    @Override
+                    protected void updateItem(Property item, boolean empty) {
+                        super.updateItem(item, empty);
+                        setText(item.toString());
+                    }
+                });
+            });
+        }, "Display Rented Units Thread");
+        thread.start();
         App.navigate();
     }
 
Index: src/main/java/com/app/project/javafxcontroller/PropertyController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.project.javafxcontroller;\n\nimport com.app.project.App;\nimport com.app.project.entity.Property;\nimport com.app.project.repository.PropertiesRepository;\nimport com.app.project.service.PropertyServices;\nimport javafx.application.Platform;\nimport javafx.beans.property.SimpleStringProperty;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.Objects;\nimport java.util.ResourceBundle;\n\npublic class PropertyController implements Initializable {\n    @FXML\n    private Button closebtn;\n    private PropertyServices propertyServices = new PropertyServices(PropertiesRepository.getInstance());\n\n    @FXML\n    private TableView<Property> tableView;\n    @FXML\n    private TableColumn<Property, String> address;\n    @FXML\n    private TableColumn<Property, String> propertyId;\n    @FXML\n    private TableColumn<Property, String> rented;\n    private ObservableList<Property> propertyObservableList;\n\n    private void displayAllProperties() {\n        // Retrieve all items from the model and add them to the list\n        System.out.println(\"Running a new Thread\");\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                ArrayList<Property> properties = (ArrayList<Property>) (ArrayList<?>) propertyServices.getAll();\n                propertyObservableList.addAll(properties);\n                Platform.runLater(() -> {\n                    address.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getAddress().toString()));\n                    propertyId.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getID().toString()));\n                    rented.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().isVacant()?\"Available\":\"Not Available\"));\n                    tableView.setItems(propertyObservableList);\n//                    App.navigate();\n                });\n            }\n        });\n        thread.start();\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        propertyObservableList = FXCollections.observableArrayList();\n        displayAllProperties();\n    }\n\n    @FXML\n    private void handleAddNewProperty(ActionEvent ae) throws IOException {\n        Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"/AddProperty.fxml\")));\n        Stage stage = new Stage();\n        stage.setTitle(\"Add property\");\n        stage.setScene(new Scene(root));\n        stage.show();\n        App.stage.close();\n    }\n\n    @FXML\n    private void back() {\n        Stage stage = (Stage) closebtn.getScene().getWindow();\n        stage.close();\n        App.navigate();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/PropertyController.java b/src/main/java/com/app/project/javafxcontroller/PropertyController.java
--- a/src/main/java/com/app/project/javafxcontroller/PropertyController.java	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/src/main/java/com/app/project/javafxcontroller/PropertyController.java	(date 1681232094799)
@@ -43,20 +43,18 @@
     private void displayAllProperties() {
         // Retrieve all items from the model and add them to the list
         System.out.println("Running a new Thread");
-        Thread thread = new Thread(new Runnable() {
-            @Override
-            public void run() {
-                ArrayList<Property> properties = (ArrayList<Property>) (ArrayList<?>) propertyServices.getAll();
-                propertyObservableList.addAll(properties);
-                Platform.runLater(() -> {
-                    address.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getAddress().toString()));
-                    propertyId.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getID().toString()));
-                    rented.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().isVacant()?"Available":"Not Available"));
-                    tableView.setItems(propertyObservableList);
-//                    App.navigate();
-                });
-            }
-        });
+        Thread thread = new Thread(() -> {
+            ArrayList<Property> properties = (ArrayList<Property>) (ArrayList<?>) propertyServices.getAll();
+            propertyObservableList.addAll(properties);
+            Platform.runLater(() -> {
+                address.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getAddress().toString()));
+                propertyId.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getID().toString()));
+                rented.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().isVacant()?"Available":"Not Available"));
+                tableView.setItems(propertyObservableList);
+                // App.navigate();
+            });
+            System.out.println("The current thread running is : " + Thread.currentThread());
+        }, "Display properties thread");
         thread.start();
     }
 
Index: src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.project.javafxcontroller;\n\nimport com.app.project.App;\nimport com.app.project.entity.Property;\nimport com.app.project.repository.PropertiesRepository;\nimport com.app.project.service.PropertyServices;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.stage.Stage;\n\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.ResourceBundle;\n\npublic class VacantUnitsController implements Initializable {\n    private PropertyServices propertyServices = new PropertyServices(PropertiesRepository.getInstance());\n    @FXML\n    private ListView<Property> vacantUnitsListView;\n    private ObservableList<Property> vacantUnitsObservableList;\n    @FXML\n    private Button closebtn;\n\n    public void initialize() {\n        vacantUnitsObservableList = FXCollections.observableArrayList();\n        vacantUnitsListView.setItems(vacantUnitsObservableList);\n        displayAllVacantUnits();\n\n    }\n\n    private void displayAllVacantUnits() {\n        // Retrieve all items from the model and add them to the list\n        ArrayList<Property> vacantUnits = (ArrayList<Property>) (ArrayList<?>) propertyServices.findVacant();\n        vacantUnitsObservableList.addAll(vacantUnits);\n        vacantUnitsListView = new ListView<>(vacantUnitsObservableList);\n        vacantUnitsListView.setCellFactory(param -> new ListCell<Property>() {\n            @Override\n            protected void updateItem(Property item, boolean empty) {\n                super.updateItem(item, empty);\n                setText(item.toString());\n            }\n        });\n        App.navigate();\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        vacantUnitsObservableList = FXCollections.observableArrayList();\n        vacantUnitsListView.setItems(vacantUnitsObservableList);\n        displayAllVacantUnits();\n    }\n\n    //    @FXML\n//    private void handleAddNewProperty(ActionEvent ae) throws IOException {\n//        Parent root = FXMLLoader.load(getClass().getResource(\"/AddProperty.fxml\"));\n//        Stage stage = new Stage();\n//        stage.setTitle(\"Add property View\");\n//        stage.setScene(new Scene(root));\n//        stage.show();\n//        App.stage.close();\n//    }\n    @FXML\n    private void back() {\n        Stage stage = (Stage) closebtn.getScene().getWindow();\n        stage.close();\n        App.navigate();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java b/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java
--- a/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java	(date 1681232319430)
@@ -4,6 +4,7 @@
 import com.app.project.entity.Property;
 import com.app.project.repository.PropertiesRepository;
 import com.app.project.service.PropertyServices;
+import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
@@ -36,14 +37,19 @@
         // Retrieve all items from the model and add them to the list
         ArrayList<Property> vacantUnits = (ArrayList<Property>) (ArrayList<?>) propertyServices.findVacant();
         vacantUnitsObservableList.addAll(vacantUnits);
-        vacantUnitsListView = new ListView<>(vacantUnitsObservableList);
-        vacantUnitsListView.setCellFactory(param -> new ListCell<Property>() {
-            @Override
-            protected void updateItem(Property item, boolean empty) {
-                super.updateItem(item, empty);
-                setText(item.toString());
-            }
-        });
+        Thread thread = new Thread(() -> {
+            vacantUnitsListView = new ListView<>(vacantUnitsObservableList);
+            Platform.runLater(() ->{
+                vacantUnitsListView.setCellFactory(param -> new ListCell<Property>() {
+                    @Override
+                    protected void updateItem(Property item, boolean empty) {
+                        super.updateItem(item, empty);
+                        setText(item.toString());
+                    }
+                });
+            });
+        }, "Vacant Unit Threads");
+        thread.start();
         App.navigate();
     }
 
Index: src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.project.javafxcontroller;\n\nimport com.app.project.App;\nimport com.app.project.interfaces.IProperty;\nimport com.app.project.service.LeaseServices;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.stage.Stage;\n\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.ResourceBundle;\n\npublic class PendingRentPropertiesController implements Initializable {\n    public Button closebtn;\n    private LeaseServices leaseServices = new LeaseServices();\n    @FXML\n    private ListView<IProperty> pendingRentListView;\n    private ObservableList<IProperty> pendingRentObservableList;\n\n    public void initialize() {\n        pendingRentObservableList = FXCollections.observableArrayList();\n        pendingRentListView.setItems(pendingRentObservableList);\n        displayAllPendingRentProperties();\n\n    }\n\n    private void displayAllPendingRentProperties() {\n        // Retrieve all items from the model and add them to the list\n        ArrayList<IProperty> pendingRent = (ArrayList<IProperty>) leaseServices.getPropertiesWithPendingRent();\n        pendingRentObservableList.addAll(pendingRent);\n        pendingRentListView = new ListView<>(pendingRentObservableList);\n        pendingRentListView.setCellFactory(param -> new ListCell<IProperty>() {\n            @Override\n            protected void updateItem(IProperty item, boolean empty) {\n                super.updateItem(item, empty);\n                setText(item.toString());\n            }\n        });\n        App.navigate();\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        pendingRentObservableList = FXCollections.observableArrayList();\n        pendingRentListView.setItems(pendingRentObservableList);\n        displayAllPendingRentProperties();\n    }\n\n    @FXML\n    private void back() {\n        Stage stage = (Stage) closebtn.getScene().getWindow();\n        stage.close();\n        App.navigate();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java b/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java
--- a/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java	(date 1681232319435)
@@ -3,6 +3,7 @@
 import com.app.project.App;
 import com.app.project.interfaces.IProperty;
 import com.app.project.service.LeaseServices;
+import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
@@ -34,14 +35,19 @@
         // Retrieve all items from the model and add them to the list
         ArrayList<IProperty> pendingRent = (ArrayList<IProperty>) leaseServices.getPropertiesWithPendingRent();
         pendingRentObservableList.addAll(pendingRent);
-        pendingRentListView = new ListView<>(pendingRentObservableList);
-        pendingRentListView.setCellFactory(param -> new ListCell<IProperty>() {
-            @Override
-            protected void updateItem(IProperty item, boolean empty) {
-                super.updateItem(item, empty);
-                setText(item.toString());
-            }
-        });
+        Thread thread = new Thread(() ->{
+            pendingRentListView = new ListView<>(pendingRentObservableList);
+            Platform.runLater(() ->{
+                pendingRentListView.setCellFactory(param -> new ListCell<IProperty>() {
+                    @Override
+                    protected void updateItem(IProperty item, boolean empty) {
+                        super.updateItem(item, empty);
+                        setText(item.toString());
+                    }
+                });
+            });
+        }, "Display All Pending units Thread");
+        thread.start();
         App.navigate();
     }
 
Index: src/main/java/com/app/project/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.project;\n\nimport com.app.project.datasource.DataStore;\nimport javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.util.Objects;\n\npublic class App extends Application {\n    public static Stage stage;\n    public static Scene scene;\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n    public static void navigate() {\n//        let's make this utility function or something\n        try {\n            App.stage.setScene(scene);\n            App.stage.show();\n        } catch (Exception ex) {\n\n        }\n    }\n\n    public static void errorpage() throws IOException {\n//        call this in case of exception\n        Parent root = FXMLLoader.load(Objects.requireNonNull(App.class.getResource(\"/ErrorPage.fxml\")));\n        Stage stage = new Stage();\n        stage.setTitle(\"ERROR\");\n        stage.setScene(new Scene(root));\n        stage.show();\n        App.stage.close();\n    }\n\n    public void start(Stage primaryStage) throws Exception {\n        DataStore.initializeDataBase();\n        this.stage = primaryStage;\n        Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"/WelcomePage.fxml\")));\n        Scene scene = new Scene(root);\n        this.scene = scene;\n        stage.setScene(scene);\n        stage.setTitle(\"OSM Real Estate\");\n        stage.show();\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/App.java b/src/main/java/com/app/project/App.java
--- a/src/main/java/com/app/project/App.java	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/src/main/java/com/app/project/App.java	(date 1681232094802)
@@ -47,6 +47,6 @@
         stage.setScene(scene);
         stage.setTitle("OSM Real Estate");
         stage.show();
-
+        System.out.println("The current thread running is : " + Thread.currentThread());
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"9f24fdae-1a2b-4e38-a0f4-471413627a31\" name=\"Changes\" comment=\"Display Leases, Pending Rent Properties, Vacant Units, Rented Units and Welcome page plus all the navigations fxml and controllers added\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddTenantToProperty.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddTenantToProperty.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentAUnitController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentAUnitController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/AddTenantToProperty.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/AddTenantToProperty.fxml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeInsightWorkspaceSettings\">\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"package-info\" />\n        <option value=\"Interface\" />\n        <option value=\"JUnit5 Test Class\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"origin/master\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2MNfiYf1TwB9ulfYgH6SUPlC1wq\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.includeInheritedMembers&quot;: &quot;true&quot;,\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;18&quot;,\n    &quot;js.buildTools.gulp.gulp_package_dir&quot;: &quot;&quot;,\n    &quot;last_directory_selection&quot;: &quot;C:/Personal/APP-Project/src/main/java/com/app/project&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/muskan/IdeaProjects/APP-Project/src/main/resources&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Global Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [\n      &quot;TEXT&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"C:\\Personal\\APP-Project\\src\\main\\resources\\com.app.project\" />\n    </key>\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Personal\\APP-Project\\src\\main\\resources\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"com.app.project.controller\" />\n      <recent name=\"com.app.project.repository\" />\n      <recent name=\"com.app.project.service\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"com.app.project.javafxcontroller\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.APP_MVC_Phase2\">\n    <configuration default=\"true\" type=\"js.build_tools.gulp\">\n      <node-interpreter>project</node-interpreter>\n      <node-options />\n      <gulpfile />\n      <tasks />\n      <arguments />\n      <envs />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"APP_MVC_Phase1\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.Main\" />\n      <module name=\"APP-Project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"APP_MVC_Phase2\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.App\" />\n      <module name=\"APP-Project\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;$USER_HOME$/Downloads/javafx-sdk-19.0.2/lib&quot; --add-modules javafx.controls,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Set Data type\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.Driver\" />\n      <module name=\"APP-Project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"LeaseServicesTest.addLease\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"APP-Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.app.project.service.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"com.app.project.service\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.service.LeaseServicesTest\" />\n      <option name=\"METHOD_NAME\" value=\"addLease\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"LeaseServicesTest.getAllLeases\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"APP-Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.app.project.service.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"com.app.project.service\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.service.LeaseServicesTest\" />\n      <option name=\"METHOD_NAME\" value=\"getAllLeases\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"LeaseServicesTest.getTenantNames\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"APP-Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.app.project.service.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"com.app.project.service\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.service.LeaseServicesTest\" />\n      <option name=\"METHOD_NAME\" value=\"getTenantNames\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"LeaseServicesTest.removeLease\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"APP-Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.app.project.service.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"com.app.project.service\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.app.project.service.LeaseServicesTest\" />\n      <option name=\"METHOD_NAME\" value=\"removeLease\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"APP-Project\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" nameIsGenerated=\"true\">\n      <MavenSettings>\n        <option name=\"myGeneralSettings\" />\n        <option name=\"myRunnerSettings\" />\n        <option name=\"myRunnerParameters\">\n          <MavenRunnerParameters>\n            <option name=\"profiles\">\n              <set />\n            </option>\n            <option name=\"goals\">\n              <list />\n            </option>\n            <option name=\"pomFileName\" />\n            <option name=\"profilesMap\">\n              <map />\n            </option>\n            <option name=\"resolveToWorkspace\" value=\"false\" />\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\n          </MavenRunnerParameters>\n        </option>\n      </MavenSettings>\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.APP_MVC_Phase2\" />\n      <item itemvalue=\"Application.Set Data type\" />\n      <item itemvalue=\"Application.APP_MVC_Phase1\" />\n      <item itemvalue=\"JUnit.LeaseServicesTest.addLease\" />\n      <item itemvalue=\"JUnit.LeaseServicesTest.getAllLeases\" />\n      <item itemvalue=\"JUnit.LeaseServicesTest.getTenantNames\" />\n      <item itemvalue=\"JUnit.LeaseServicesTest.removeLease\" />\n      <item itemvalue=\"Maven.APP-Project\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.LeaseServicesTest.removeLease\" />\n        <item itemvalue=\"JUnit.LeaseServicesTest.getTenantNames\" />\n        <item itemvalue=\"JUnit.LeaseServicesTest.getAllLeases\" />\n        <item itemvalue=\"JUnit.LeaseServicesTest.addLease\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"9f24fdae-1a2b-4e38-a0f4-471413627a31\" name=\"Changes\" comment=\"\" />\n      <created>1677613090693</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1677613090693</updated>\n      <workItem from=\"1677613091912\" duration=\"8717000\" />\n      <workItem from=\"1677734774226\" duration=\"40490000\" />\n      <workItem from=\"1677874097788\" duration=\"769000\" />\n      <workItem from=\"1680640992574\" duration=\"3909000\" />\n      <workItem from=\"1680738578821\" duration=\"1589000\" />\n      <workItem from=\"1680740181258\" duration=\"15569000\" />\n      <workItem from=\"1680881566162\" duration=\"1646000\" />\n      <workItem from=\"1680883243015\" duration=\"5593000\" />\n      <workItem from=\"1680892899107\" duration=\"973000\" />\n      <workItem from=\"1680893881248\" duration=\"209000\" />\n      <workItem from=\"1680894097439\" duration=\"19547000\" />\n      <workItem from=\"1681157283212\" duration=\"1787000\" />\n      <workItem from=\"1681159085527\" duration=\"427000\" />\n      <workItem from=\"1681159524403\" duration=\"187000\" />\n      <workItem from=\"1681159714865\" duration=\"283000\" />\n      <workItem from=\"1681160021727\" duration=\"31000\" />\n      <workItem from=\"1681160054732\" duration=\"63000\" />\n      <workItem from=\"1681160120433\" duration=\"116000\" />\n      <workItem from=\"1681160239765\" duration=\"4185000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Add and Display Tenant FXML and Controllers added\">\n      <created>1680937459972</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680937459972</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Add and Display Tenant FXML and Controllers added\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add and Display Tenant FXML and Controllers added\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/src/test/java/com/app/project/service/LeaseServicesTest.java</url>\n          <line>96</line>\n          <properties class=\"com.app.project.service.LeaseServicesTest\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"6\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/src/test/java/com/app/project/service/LeaseServicesTest.java</url>\n          <line>77</line>\n          <properties class=\"com.app.project.service.LeaseServicesTest\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"8\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/com/app/project/Main.java</url>\n          <line>10</line>\n          <option name=\"timeStamp\" value=\"19\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 732b7314b01d96b0b4d9fb1eba2316422d61b7ea)
+++ b/.idea/workspace.xml	(date 1681232094781)
@@ -4,11 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9f24fdae-1a2b-4e38-a0f4-471413627a31" name="Changes" comment="Display Leases, Pending Rent Properties, Vacant Units, Rented Units and Welcome page plus all the navigations fxml and controllers added">
+    <list default="true" id="9f24fdae-1a2b-4e38-a0f4-471413627a31" name="Changes" comment="added a new thread for rent a unit">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddTenantToProperty.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddTenantToProperty.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentAUnitController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentAUnitController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/AddTenantToProperty.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/AddTenantToProperty.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PropertyController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PropertyController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -285,7 +287,14 @@
       <option name="project" value="LOCAL" />
       <updated>1680937459972</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="added a new thread for rent a unit">
+      <created>1681229050060</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1681229050060</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -296,7 +305,19 @@
       <map>
         <entry key="MAIN">
           <value>
-            <State />
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
           </value>
         </entry>
       </map>
@@ -304,7 +325,8 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Add and Display Tenant FXML and Controllers added" />
-    <option name="LAST_COMMIT_MESSAGE" value="Add and Display Tenant FXML and Controllers added" />
+    <MESSAGE value="added a new thread for rent a unit" />
+    <option name="LAST_COMMIT_MESSAGE" value="added a new thread for rent a unit" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
