Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,11 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9f24fdae-1a2b-4e38-a0f4-471413627a31" name="Changes" comment="Display Leases, Pending Rent Properties, Vacant Units, Rented Units and Welcome page plus all the navigations fxml and controllers added">
+    <list default="true" id="9f24fdae-1a2b-4e38-a0f4-471413627a31" name="Changes" comment="added a new thread for rent a unit">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddPropertyController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddPropertyController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/AddProperty.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/AddProperty.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/RentAUnit.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/RentAUnit.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PropertyController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/PropertyController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/RentedUnitsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -35,7 +37,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="Muskan" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -113,6 +115,15 @@
     </key>
   </component>
   <component name="RunManager" selected="Application.APP_MVC_Phase2">
+    <configuration default="true" type="js.build_tools.gulp">
+      <node-interpreter>project</node-interpreter>
+      <node-options />
+      <gulpfile />
+      <tasks />
+      <arguments />
+      <envs />
+      <method v="2" />
+    </configuration>
     <configuration name="APP_MVC_Phase1" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="com.app.project.Main" />
       <module name="APP-Project" />
@@ -123,7 +134,7 @@
     <configuration name="APP_MVC_Phase2" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="com.app.project.App" />
       <module name="APP-Project" />
-      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\javafx-sdk-19.0.2.1\lib&quot; --add-modules javafx.controls,javafx.fxml" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;$USER_HOME$/Downloads/javafx-sdk-19.0.2/lib&quot; --add-modules javafx.controls,javafx.fxml" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -220,15 +231,6 @@
           </MavenRunnerParameters>
         </option>
       </MavenSettings>
-      <method v="2" />
-    </configuration>
-    <configuration default="true" type="js.build_tools.gulp">
-      <node-interpreter>project</node-interpreter>
-      <node-options />
-      <gulpfile />
-      <tasks />
-      <arguments />
-      <envs />
       <method v="2" />
     </configuration>
     <list>
@@ -328,9 +330,19 @@
           <option name="timeStamp" value="8" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/com/app/project/Main.java</url>
-          <line>10</line>
-          <option name="timeStamp" value="19" />
+          <url>file://$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddPropertyController.java</url>
+          <line>102</line>
+          <option name="timeStamp" value="10" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddPropertyController.java</url>
+          <line>103</line>
+          <option name="timeStamp" value="11" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/com/app/project/javafxcontroller/AddPropertyController.java</url>
+          <line>60</line>
+          <option name="timeStamp" value="13" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: src/main/java/com/app/project/javafxcontroller/PropertyController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/PropertyController.java b/src/main/java/com/app/project/javafxcontroller/PropertyController.java
--- a/src/main/java/com/app/project/javafxcontroller/PropertyController.java	
+++ b/src/main/java/com/app/project/javafxcontroller/PropertyController.java	
@@ -43,20 +43,18 @@
     private void displayAllProperties() {
         // Retrieve all items from the model and add them to the list
         System.out.println("Running a new Thread");
-        Thread thread = new Thread(new Runnable() {
-            @Override
-            public void run() {
-                ArrayList<Property> properties = (ArrayList<Property>) (ArrayList<?>) propertyServices.getAll();
-                propertyObservableList.addAll(properties);
-                Platform.runLater(() -> {
-                    address.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getAddress().toString()));
-                    propertyId.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getID().toString()));
-                    rented.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().isVacant()?"Available":"Not Available"));
-                    tableView.setItems(propertyObservableList);
-//                    App.navigate();
-                });
-            }
-        });
+        Thread thread = new Thread(() -> {
+            ArrayList<Property> properties = (ArrayList<Property>) (ArrayList<?>) propertyServices.getAll();
+            propertyObservableList.addAll(properties);
+            Platform.runLater(() -> {
+                address.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getAddress().toString()));
+                propertyId.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().getID().toString()));
+                rented.setCellValueFactory(cellData -> new SimpleStringProperty( cellData.getValue().isVacant()?"Available":"Not Available"));
+                tableView.setItems(propertyObservableList);
+                // App.navigate();
+            });
+            System.out.println("The current thread running is : " + Thread.currentThread());
+        }, "Display properties thread");
         thread.start();
     }
 
Index: src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java b/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java
--- a/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java	
+++ b/src/main/java/com/app/project/javafxcontroller/VacantUnitsController.java	
@@ -4,6 +4,7 @@
 import com.app.project.entity.Property;
 import com.app.project.repository.PropertiesRepository;
 import com.app.project.service.PropertyServices;
+import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
@@ -36,14 +37,19 @@
         // Retrieve all items from the model and add them to the list
         ArrayList<Property> vacantUnits = (ArrayList<Property>) (ArrayList<?>) propertyServices.findVacant();
         vacantUnitsObservableList.addAll(vacantUnits);
-        vacantUnitsListView = new ListView<>(vacantUnitsObservableList);
-        vacantUnitsListView.setCellFactory(param -> new ListCell<Property>() {
-            @Override
-            protected void updateItem(Property item, boolean empty) {
-                super.updateItem(item, empty);
-                setText(item.toString());
-            }
-        });
+        Thread thread = new Thread(() -> {
+            vacantUnitsListView = new ListView<>(vacantUnitsObservableList);
+            Platform.runLater(() ->{
+                vacantUnitsListView.setCellFactory(param -> new ListCell<Property>() {
+                    @Override
+                    protected void updateItem(Property item, boolean empty) {
+                        super.updateItem(item, empty);
+                        setText(item.toString());
+                    }
+                });
+            });
+        }, "Vacant Unit Threads");
+        thread.start();
         App.navigate();
     }
 
Index: src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java b/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java
--- a/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java	
+++ b/src/main/java/com/app/project/javafxcontroller/PendingRentPropertiesController.java	
@@ -3,6 +3,7 @@
 import com.app.project.App;
 import com.app.project.interfaces.IProperty;
 import com.app.project.service.LeaseServices;
+import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
@@ -34,14 +35,19 @@
         // Retrieve all items from the model and add them to the list
         ArrayList<IProperty> pendingRent = (ArrayList<IProperty>) leaseServices.getPropertiesWithPendingRent();
         pendingRentObservableList.addAll(pendingRent);
-        pendingRentListView = new ListView<>(pendingRentObservableList);
-        pendingRentListView.setCellFactory(param -> new ListCell<IProperty>() {
-            @Override
-            protected void updateItem(IProperty item, boolean empty) {
-                super.updateItem(item, empty);
-                setText(item.toString());
-            }
-        });
+        Thread thread = new Thread(() ->{
+            pendingRentListView = new ListView<>(pendingRentObservableList);
+            Platform.runLater(() ->{
+                pendingRentListView.setCellFactory(param -> new ListCell<IProperty>() {
+                    @Override
+                    protected void updateItem(IProperty item, boolean empty) {
+                        super.updateItem(item, empty);
+                        setText(item.toString());
+                    }
+                });
+            });
+        }, "Display All Pending units Thread");
+        thread.start();
         App.navigate();
     }
 
